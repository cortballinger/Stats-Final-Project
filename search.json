[
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "Model",
    "section": "",
    "text": "Here is the necessary packages we need in Python:\nCode\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing"
  },
  {
    "objectID": "model.html#get-data",
    "href": "model.html#get-data",
    "title": "Model",
    "section": "Get Data",
    "text": "Get Data\n\n\nCode\ndf = penguins.load_penguins().dropna()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007"
  },
  {
    "objectID": "model.html#define-model-and-fit",
    "href": "model.html#define-model-and-fit",
    "title": "Model",
    "section": "Define Model and Fit",
    "text": "Define Model and Fit\nBelow is the code for fitting the linear regression.\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "objectID": "model.html#get-some-information",
    "href": "model.html#get-some-information",
    "title": "Model",
    "section": "Get some information",
    "text": "Get some information\nAttached is the code and results to find R^2, Intercept, Variables studied, and Coefficients for these variables.\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n\n\nR^2 0.8555368759537614\nIntercept 2169.2697209393996\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]\n\n\n\n\nCode\n#from joblib import dump\n# Import the vetiver package\n#import vetiver\n#from vetiver import VetiverModel, vetiver_pin_write\n#from pins import board_folder\n\n# Assuming 'model' and 'X' are defined earlier in your code\n\n# Save your model locally with joblib\n#dump(model, 'model.pkl')\n\n# Initialize a VetiverModel object\n#v = VetiverModel(model=model, model_name='penguin_model', prototype_data=X)\n\n# Setup a local board for vetiver pins\n#model_board = board_folder(\"Final Project/data/model\", allow_pickle_read=True)\n\n# Write your model to the pin board\n#vetiver_pin_write(model_board, v, 'penguin_model_pin')\n\n# Prepare a Docker container for deployment\n#vetiver.prepare_docker(model_board, \"penguin_model\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this Project!",
    "section": "",
    "text": "Exploring the Palmer Penguins Dataset: A Data Analysis and Modeling Website\nWelcome to our comprehensive data analysis and modeling platform focused on the Palmer Penguins dataset. Our website is designed to help you explore the intriguing relationship between penguin bill length and mass, providing insights through exploratory data analysis and advanced machine learning models.\n\nFeatures:\n1. Exploratory Data Analysis:\nDive into the Palmer Penguins dataset and explore the key characteristics of these unique birds. We offer interactive visualizations and detailed statistical summaries that help you understand the distributions, correlations, and patterns within the data.\n2. Examine Models and Graphs:\nWe aim to provide a comprehensive and intuitive way to explore the Palmer Penguins data-set. Whether you’re interested in uncovering patterns, identifying relationships, or building predictive models, our platform’s visual tools will guide you through each step of the process.\n3. Shiny App Visualization:\nExperience our interactive Shiny app, where you can visualize model predictions in real time. Adjust input parameters to see how they affect the outcomes, allowing you to explore various scenarios and gain deeper insights into the model’s behavior.\nLet’s take a look at the penguins we will be studying:\nAdelie Penguin\n\nChinstrap Penguin\n\nGentoo Penguin"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Penguins EDA",
    "section": "",
    "text": "Here is the code to download the necessary packages in R:\n\n\nCode\n#packages &lt;- c(\"palmerpenguins\", \"dplyr\", \"ggplot2\", \"tidyverse\", \"tidymodels\", \"ISLR2\",\"rpart.plot\", \"vip\", \"xgboost\", \"randomForest\")\n#suppressMessages(sapply(packages, install.packages))\nlibrary(palmerpenguins)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyverse) \nlibrary(tidymodels) \nlibrary(ISLR2) \nlibrary(rpart.plot) \nlibrary(vip) \nlibrary(xgboost) \nlibrary(randomForest)\n\ndf &lt;- palmerpenguins::penguins\n\n\nHere is our data:\n\n\nCode\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      ),\n    .groups = \"drop\"\n    ) %&gt;%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nyear\n\n\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n2008.055\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n2008.055\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n2007.000\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n2007.971\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n2007.971\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n2008.069\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n2008.066\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n2008.400"
  },
  {
    "objectID": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "href": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "title": "Penguins EDA",
    "section": "",
    "text": "Here is the code to download the necessary packages in R:\n\n\nCode\n#packages &lt;- c(\"palmerpenguins\", \"dplyr\", \"ggplot2\", \"tidyverse\", \"tidymodels\", \"ISLR2\",\"rpart.plot\", \"vip\", \"xgboost\", \"randomForest\")\n#suppressMessages(sapply(packages, install.packages))\nlibrary(palmerpenguins)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyverse) \nlibrary(tidymodels) \nlibrary(ISLR2) \nlibrary(rpart.plot) \nlibrary(vip) \nlibrary(xgboost) \nlibrary(randomForest)\n\ndf &lt;- palmerpenguins::penguins\n\n\nHere is our data:\n\n\nCode\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      ),\n    .groups = \"drop\"\n    ) %&gt;%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nyear\n\n\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n2008.055\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n2008.055\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n2007.000\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n2007.971\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n2007.971\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n2008.069\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n2008.066\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n2008.400"
  },
  {
    "objectID": "eda.html#penguin-features-by-species-and-sex",
    "href": "eda.html#penguin-features-by-species-and-sex",
    "title": "Penguins EDA",
    "section": "Penguin features by Species and Sex",
    "text": "Penguin features by Species and Sex\nHere we are graphing many different relationships so you can visualize some of the profound similarities and differences for each species, and within the sex of each species:\nSpecies plots:\n\n\nCode\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf %&gt;%\n  ggplot(aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n\nSpecies separated into sex with body mass vs. bill length:\n\n\n\nCode\nadelie_data_filtered &lt;- subset(df, species == \"Adelie\" & !is.na(sex))\n\nggplot(adelie_data_filtered, aes(x = bill_length_mm, y = body_mass_g, color = sex)) +\n  geom_point() + \n  geom_smooth(method = \"lm\") +\n  theme_minimal() +\n  labs(\n    title = \"Adelie Penguin Body Mass vs. Bill Length by Gender\",\n    x = \"Bill Length (mm)\",\n    y = \"Body Mass (g)\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\nchinstrap_data &lt;- subset(df, species == \"Chinstrap\")\n\nggplot(chinstrap_data, aes(x = bill_length_mm, y = body_mass_g, color = sex)) +\n  geom_point() +  \n  geom_smooth(method = \"lm\") +\n  theme_minimal() +\n  labs(\n    title = \"Chinstrap Penguin Body Mass vs. Bill Length by Gender\",\n    x = \"Bill Length (mm)\",\n    y = \"Body Mass (g)\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\ngentoo_data_filtered &lt;- subset(df, species == \"Gentoo\" & !is.na(sex))\n\nggplot(gentoo_data_filtered, aes(x = bill_length_mm, y = body_mass_g, color = sex)) +\n  geom_point() + \n  geom_smooth(method = \"lm\") + \n  theme_minimal() +\n  labs(\n    title = \"Gentoo Penguin Body Mass vs. Bill Length by Gender\",\n    x = \"Bill Length (mm)\",\n    y = \"Body Mass (g)\"\n  )"
  },
  {
    "objectID": "eda.html#random-foresting",
    "href": "eda.html#random-foresting",
    "title": "Penguins EDA",
    "section": "Random Foresting",
    "text": "Random Foresting\n\n\nCode\n#Random Forest For sex\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\")\nclass_tree_spec &lt;- decision_tree() %&gt;%         \n  set_engine(\"rpart\") %&gt;%         \n  set_mode(\"classification\")\n\nclass_tree_fit &lt;- class_tree_spec %&gt;%\n  fit(sex ~ ., data = penguins)    \n\nclass_tree_fit %&gt;%\n  extract_fit_engine() %&gt;%\n  rpart.plot()\n\n\n\n\n\n\n\n\n\nCode\naugment(class_tree_fit, new_data = penguins) %&gt;%   \n  accuracy(truth = sex, estimate =.pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.910\n\n\nCode\naugment(class_tree_fit, new_data = penguins) %&gt;%  \n  conf_mat(truth = sex, estimate =.pred_class)\n\n\n          Truth\nPrediction female male\n    female    139    4\n    male       26  164\n\n\n\n\nCode\n#Random Forest For species\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\")\nclass_tree_spec &lt;- decision_tree() %&gt;%         \n  set_engine(\"rpart\") %&gt;%         \n  set_mode(\"classification\")\n\nclass_tree_fit &lt;- class_tree_spec %&gt;%\n  fit(species ~ ., data = penguins)    \n\nclass_tree_fit %&gt;%\n  extract_fit_engine() %&gt;%\n  rpart.plot()\n\n\n\n\n\n\n\n\n\nCode\naugment(class_tree_fit, new_data = penguins) %&gt;%   \n  accuracy(truth = species, estimate =.pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy multiclass     0.965\n\n\nCode\naugment(class_tree_fit, new_data = penguins) %&gt;%  \n  conf_mat(truth = species, estimate =.pred_class)\n\n\n           Truth\nPrediction  Adelie Chinstrap Gentoo\n  Adelie       146         5      0\n  Chinstrap      6        63      1\n  Gentoo         0         0    123"
  },
  {
    "objectID": "eda.html#this-is-for-the-api-which-would-not-push-to-github",
    "href": "eda.html#this-is-for-the-api-which-would-not-push-to-github",
    "title": "Penguins EDA",
    "section": "This is for the API which would not push to github",
    "text": "This is for the API which would not push to github\nPutting the data into Duck DB:\n\n\nCode\n#packages &lt;- c(\"DBI\", \"duckdb\")\n#suppressMessages(sapply(packages, install.packages))\nlibrary(DBI)\nlibrary(duckdb)\n\n\n\n\nCode\ncon &lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\n\nDBI::dbWriteTable(con, \"penguins\", palmerpenguins::penguins, overwrite = TRUE)\n\n\n\n\nCode\ndf &lt;- dplyr::tbl(con, \"penguins\")\n\n\n\n\nCode\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n        ends_with(\"mm\") | ends_with(\"g\"),\n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  dplyr::collect() %&gt;%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\n\n\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n\n\n\n\n\n\n\nCode\nDBI::dbDisconnect(con, shutdown = TRUE)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Final Project",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  }
]